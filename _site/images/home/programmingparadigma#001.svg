<?xml version="1.0" encoding="utf-8"?>
<svg class="bubble" width="949.62" height="949.62" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g class="node" transform="translate(400.28880884501274,531.0138596070649)"><title>object-oriented programming: 399</title><circle r="151.2181290230995" style="fill: rgb(49, 130, 189);"></circle><text dy=".3em" font-size="40" style="text-anchor: middle; cursor: pointer;">object-oriented</text></g><g class="node" transform="translate(609.1522727153522,531.0138596070649)"><title>concurrent computing: 55</title><circle r="56.143406158775264" style="fill: rgb(107, 174, 214);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">concurrent com</text></g><g class="node" transform="translate(611.7873799242003,343.36155911811073)"><title>functional programming: 295</title><circle r="130.0254664746463" style="fill: rgb(158, 202, 225);"></circle><text dy=".3em" font-size="40" style="text-anchor: middle; cursor: pointer;">functional</text></g><g class="node" transform="translate(419.2758122902774,316.2472054966319)"><title>structured programming: 69</title><circle r="62.884260467875" style="fill: rgb(198, 219, 239);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">structured prog</text></g><g class="node" transform="translate(235.20160762559,314.3161607706023)"><title>imperative programming: 250</title><circle r="119.69814411694877" style="fill: rgb(230, 85, 13);"></circle><text dy=".3em" font-size="40" style="text-anchor: middle; cursor: pointer;">imperative</text></g><g class="node" transform="translate(257.4464423568701,446.7736030940673)"><title>component-based software engineering: 3</title><circle r="13.112274724871426" style="fill: rgb(253, 141, 60);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">com</text></g><g class="node" transform="translate(207.0953273061582,481.7041377569338)"><title>generic programming: 38</title><circle r="46.66692776652818" style="fill: rgb(253, 174, 107);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">generic pro</text></g><g class="node" transform="translate(207.6643355162597,574.6581971789981)"><title>reflective programming: 35</title><circle r="44.786944511831315" style="fill: rgb(253, 208, 162);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">reflective </text></g><g class="node" transform="translate(250.78456201502433,641.1949072501652)"><title>class-based programming: 19</title><circle r="32.998501080854865" style="fill: rgb(49, 163, 84);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">class-ba</text></g><g class="node" transform="translate(294.91657831544205,659.0648475553486)"><title>concurrent object-oriented programming: 3</title><circle r="13.112274724871426" style="fill: rgb(116, 196, 118);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">con</text></g><g class="node" transform="translate(319.97711207590646,688.362759217756)"><title>aspect-oriented programming: 10</title><circle r="23.939628823389754" style="fill: rgb(161, 217, 155);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">aspec</text></g><g class="node" transform="translate(375.2615640223703,720.6914076866428)"><title>prototype-based programming: 26</title><circle r="38.60149159455306" style="fill: rgb(199, 233, 192);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">prototype</text></g><g class="node" transform="translate(452.12616085373315,713.6053467571003)"><title>event-driven programming: 24</title><circle r="37.087113498950224" style="fill: rgb(117, 107, 177);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">event-dri</text></g><g class="node" transform="translate(498.1163156446392,675.0688533783417)"><title>object-based language: 8</title><circle r="21.412254962085118" style="fill: rgb(158, 154, 200);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">objec</text></g><g class="node" transform="translate(646.080951606971,715.4642694255072)"><title>procedural programming: 297</title><circle r="130.4654862313773" style="fill: rgb(188, 189, 220);"></circle><text dy=".3em" font-size="40" style="text-anchor: middle; cursor: pointer;">procedural</text></g><g class="node" transform="translate(778.7073885521322,515.3259218840224)"><title>multi-paradigm programming: 204</title><circle r="108.12658736552329" style="fill: rgb(218, 218, 235);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">multi-paradigm programming</text></g><g class="node" transform="translate(735.8622317746369,406.23938428573666)"><title>query language: 1</title><circle r="7.570375342092843" style="fill: rgb(99, 99, 99);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">q</text></g><g class="node" transform="translate(794.2819248172309,355.1078297629111)"><title>purely functional programming: 46</title><circle r="51.344783666188505" style="fill: rgb(150, 150, 150);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">purely funct</text></g><g class="node" transform="translate(760.3419874586056,279.223835608192)"><title>dependently typed programming: 16</title><circle r="30.281501368371373" style="fill: rgb(189, 189, 189);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">depende</text></g><g class="node" transform="translate(733.3739220258232,173.24454587255758)"><title>declarative programming: 105</title><circle r="77.57326341025993" style="fill: rgb(217, 217, 217);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">declarative program</text></g><g class="node" transform="translate(643.0562126188429,200.06534455471643)"><title>non-structured programming: 4</title><circle r="15.140750684185688" style="fill: rgb(49, 130, 189);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">non</text></g><g class="node" transform="translate(578.3251090239872,148.69218822290702)"><title>array programming: 76</title><circle r="65.99700216170973" style="fill: rgb(107, 174, 214);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">array programmin</text></g><g class="node" transform="translate(501.80238156654366,217.64683127114864)"><title>logic programming: 22</title><circle r="35.508207812330966" style="fill: rgb(158, 202, 225);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">logic pr</text></g><g class="node" transform="translate(493.34653526570753,264.60788440798865)"><title>expert system: 2</title><circle r="10.706127481042559" style="fill: rgb(198, 219, 239);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">ex</text></g><g class="node" transform="translate(429.2883510211827,216.85585972701034)"><title>metaprogramming: 22</title><circle r="35.508207812330966" style="fill: rgb(230, 85, 13);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">metaprog</text></g><g class="node" transform="translate(385.04486935989723,244.4643614007367)"><title>object-oriented analysis and design: 4</title><circle r="15.140750684185688" style="fill: rgb(253, 141, 60);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">obj</text></g><g class="node" transform="translate(370.217586956284,263.60655863989007)"><title>stack-oriented programming language: 1</title><circle r="7.570375342092843" style="fill: rgb(253, 174, 107);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">s</text></g><g class="node" transform="translate(349.70726261667636,227.14455917789851)"><title>reactive programming: 9</title><circle r="22.71112602627853" style="fill: rgb(253, 208, 162);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">react</text></g><g class="node" transform="translate(314.0371494975225,172.82933142717184)"><title>esoteric programming: 29</title><circle r="40.76771886903721" style="fill: rgb(49, 163, 84);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">esoteric p</text></g><g class="node" transform="translate(250.35604112860375,172.51129774938158)"><title>constraint programming: 8</title><circle r="21.412254962085118" style="fill: rgb(116, 196, 118);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">const</text></g><g class="node" transform="translate(213.00453806884371,179.79437720780908)"><title>markup language: 4</title><circle r="15.140750684185688" style="fill: rgb(161, 217, 155);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">mar</text></g><g class="node" transform="translate(180.3420459003758,187.5496109915868)"><title>multi-paradigm programming language: 5</title><circle r="16.927873880107825" style="fill: rgb(199, 233, 192);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">mult</text></g><g class="node" transform="translate(138.46961378516437,203.06446139153041)"><title>modular programming: 12</title><circle r="26.224549449742852" style="fill: rgb(117, 107, 177);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">modula</text></g><g class="node" transform="translate(126.50544592584936,239.58738381182627)"><title>language-oriented programming: 2</title><circle r="10.706127481042559" style="fill: rgb(158, 154, 200);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">la</text></g><g class="node" transform="translate(94.31667630183767,264.22216855019406)"><title>function-level programming: 14</title><circle r="28.325750819392994" style="fill: rgb(188, 189, 220);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">functio</text></g><g class="node" transform="translate(103.72748803299129,303.6483797753955)"><title>web template system: 2</title><circle r="10.706127481042559" style="fill: rgb(218, 218, 235);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">we</text></g><g class="node" transform="translate(99.85132928666673,330.721108298651)"><title>concept programming: 4</title><circle r="15.140750684185688" style="fill: rgb(99, 99, 99);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">con</text></g><g class="node" transform="translate(95.7845251631993,380.19542386783115)"><title>compiled language: 19</title><circle r="32.998501080854865" style="fill: rgb(150, 150, 150);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">compiled</text></g><g class="node" transform="translate(135.06132783971765,395.271411869693)"><title>concurrent programming language: 1</title><circle r="7.570375342092843" style="fill: rgb(189, 189, 189);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">c</text></g><g class="node" transform="translate(142.78570489326012,431.8630571687857)"><title>dynamic programming: 14</title><circle r="28.325750819392994" style="fill: rgb(217, 217, 217);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">dynamic</text></g><g class="node" transform="translate(136.2523447328672,483.99405842493246)"><title>parallel computing: 9</title><circle r="22.71112602627853" style="fill: rgb(49, 130, 189);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">paral</text></g><g class="node" transform="translate(156.7658591731468,512.2525971438918)"><title>modularity: 2</title><circle r="10.706127481042559" style="fill: rgb(107, 174, 214);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">mo</text></g><g class="node" transform="translate(143.58827054065733,545.9127559102819)"><title>tacit programming: 10</title><circle r="23.939628823389754" style="fill: rgb(158, 202, 225);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">tacit</text></g><g class="node" transform="translate(138.79485649775472,597.3560235979057)"><title>dataflow programming: 12</title><circle r="26.224549449742852" style="fill: rgb(198, 219, 239);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">datafl</text></g><g class="node" transform="translate(171.51513013087077,621.7934422174255)"><title>synchronous programming: 3</title><circle r="13.112274724871426" style="fill: rgb(230, 85, 13);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">syn</text></g><g class="node" transform="translate(198.99496196351356,637.2776755673614)"><title>esoteric programming language: 5</title><circle r="16.927873880107825" style="fill: rgb(253, 141, 60);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">esot</text></g><g class="node" transform="translate(209.00791353911836,671.1879407476008)"><title>lazy evaluation: 5</title><circle r="16.927873880107825" style="fill: rgb(253, 174, 107);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">lazy</text></g><g class="node" transform="translate(235.33090086873005,683.678047148315)"><title>Three schema approach: 2</title><circle r="10.706127481042559" style="fill: rgb(253, 208, 162);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">Th</text></g><g class="node" transform="translate(255.0991630645752,683.0438840656818)"><title>Set theoretic programming: 1</title><circle r="7.570375342092843" style="fill: rgb(49, 163, 84);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">S</text></g><g class="node" transform="translate(276.7547226082097,702.4846112234278)"><title>visual programming language: 7</title><circle r="20.029330486593192" style="fill: rgb(116, 196, 118);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">visua</text></g><g class="node" transform="translate(304.24845990900087,723.5622972992436)"><title>pattern matching: 3</title><circle r="13.112274724871426" style="fill: rgb(161, 217, 155);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">pat</text></g><g class="node" transform="translate(323.9555656707451,752.0544790965538)"><title>scripting language: 7</title><circle r="20.029330486593192" style="fill: rgb(199, 233, 192);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">scrip</text></g><g class="node" transform="translate(354.74033421794434,771.9827086368774)"><title>data-driven programming: 4</title><circle r="15.140750684185688" style="fill: rgb(117, 107, 177);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">dat</text></g><g class="node" transform="translate(384.47416833539796,773.103602040097)"><title>dataflow: 3</title><circle r="13.112274724871426" style="fill: rgb(158, 154, 200);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">dat</text></g><g class="node" transform="translate(414.1480784929387,762.409599237227)"><title>concurrent constraint logic programming: 5</title><circle r="16.927873880107825" style="fill: rgb(188, 189, 220);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">conc</text></g><g class="node" transform="translate(452.38455582141177,773.6060875163882)"><title>functional reactive programming: 8</title><circle r="21.412254962085118" style="fill: rgb(218, 218, 235);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">funct</text></g><g class="node" transform="translate(490.0670302529516,756.3209679104323)"><title>block-structured programming: 6</title><circle r="18.543556749475112" style="fill: rgb(99, 99, 99);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">bloc</text></g><g class="node" transform="translate(514.1099164035619,784.4095585623367)"><title>constraint logic programming: 5</title><circle r="16.927873880107825" style="fill: rgb(150, 150, 150);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">cons</text></g><g class="node" transform="translate(534.3686566578517,811.1782994555033)"><title>knowledge representation and reasoning: 4</title><circle r="15.140750684185688" style="fill: rgb(189, 189, 189);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">kno</text></g><g class="node" transform="translate(556.832834358359,826.7769518511634)"><title>stack-oriented programming: 2</title><circle r="10.706127481042559" style="fill: rgb(217, 217, 217);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">st</text></g><g class="node" transform="translate(575.8035916627412,839.6288069573088)"><title>live coding: 2</title><circle r="10.706127481042559" style="fill: rgb(49, 130, 189);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">li</text></g><g class="node" transform="translate(597.7500852978635,852.2569728464774)"><title>agent-oriented programming: 3</title><circle r="13.112274724871426" style="fill: rgb(107, 174, 214);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">age</text></g><g class="node" transform="translate(622.7585634975261,856.2186864577602)"><title>copy and paste programming: 2</title><circle r="10.706127481042559" style="fill: rgb(158, 202, 225);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">co</text></g><g class="node" transform="translate(642.4966490000106,854.9560171599356)"><title>interpreted language: 1</title><circle r="7.570375342092843" style="fill: rgb(198, 219, 239);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">i</text></g><g class="node" transform="translate(659.1297207821524,854.3905971470608)"><title>Design by contract: 1</title><circle r="7.570375342092843" style="fill: rgb(230, 85, 13);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">D</text></g><g class="node" transform="translate(675.5771693198361,851.8489021808839)"><title>Literate programming: 1</title><circle r="7.570375342092843" style="fill: rgb(253, 141, 60);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">L</text></g><g class="node" transform="translate(695.2051594553824,849.4140805656617)"><title>domain-specific language: 2</title><circle r="10.706127481042559" style="fill: rgb(253, 174, 107);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">do</text></g><g class="node" transform="translate(711.7534810337919,838.5817490531663)"><title>Object-capability model: 1</title><circle r="7.570375342092843" style="fill: rgb(253, 208, 162);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">O</text></g><g class="node" transform="translate(725.9444676386674,829.887229176768)"><title>rule-based programming: 1</title><circle r="7.570375342092843" style="fill: rgb(49, 163, 84);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">r</text></g><g class="node" transform="translate(738.9993681682498,819.5650032122023)"><title>structural equation modeling: 1</title><circle r="7.570375342092843" style="fill: rgb(116, 196, 118);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">s</text></g><g class="node" transform="translate(754.8738635041655,807.7672597462235)"><title>data conversion: 2</title><circle r="10.706127481042559" style="fill: rgb(161, 217, 155);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">da</text></g><g class="node" transform="translate(763.9279718112862,790.1829065928663)"><title>actor model: 1</title><circle r="7.570375342092843" style="fill: rgb(199, 233, 192);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">a</text></g><g class="node" transform="translate(771.9855996110384,775.6208527905519)"><title>t1977355322: 1</title><circle r="7.570375342092843" style="fill: rgb(117, 107, 177);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">t</text></g><g class="node" transform="translate(778.2521903450629,760.2030508307042)"><title>SPMD: 1</title><circle r="7.570375342092843" style="fill: rgb(158, 154, 200);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">S</text></g><g class="node" transform="translate(782.6385995976582,744.1488242666624)"><title>action language: 1</title><circle r="7.570375342092843" style="fill: rgb(188, 189, 220);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">a</text></g><g class="node" transform="translate(785.08242918352,727.6865500113807)"><title>service oriented architecture: 1</title><circle r="7.570375342092843" style="fill: rgb(218, 218, 235);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">s</text></g><g class="node" transform="translate(788.5703641482731,708.2180969978333)"><title>object-orientation: 2</title><circle r="10.706127481042559" style="fill: rgb(99, 99, 99);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">ob</text></g><g class="node" transform="translate(783.1254290933721,689.2039171494421)"><title>Natural-language programming: 1</title><circle r="7.570375342092843" style="fill: rgb(150, 150, 150);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">N</text></g><g class="node" transform="translate(779.0241773576215,673.0744871873868)"><title>semi-structured data: 1</title><circle r="7.570375342092843" style="fill: rgb(189, 189, 189);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">s</text></g><g class="node" transform="translate(773.0317623587869,657.5480665057686)"><title>macro: 1</title><circle r="7.570375342092843" style="fill: rgb(217, 217, 217);"></circle><text dy=".3em" style="text-anchor: middle; cursor: pointer;">m</text></g></svg>